name: Docker Deploy
description: Deploying a web server on an EC2 instance using Docker
inputs:
    aws-access-key-id:
        required: true
    aws-secret-access-key:
        required: true
    aws-region:
        required: false
        default: ap-northeast-2
    ecr-repository:
        required: true
    ecr-image-tag:
        required: false
        default: latest
    ecr-dockerfile-name:
        required: false
        default: Dockerfile
    # docker-container-port:
    #     required: true
    # docker-container-name:
    #     required: true
    # ssh-host:
    #     required: true
    # ssh-username:
    #     required: true
    # ssh-private-key:
    #     required: true
    # ssh-port:
    #     required: false
    #     default: 22

runs:
    using: composite
    steps:
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
              aws-access-key-id: ${{ inputs.aws-access-key-id }}
              aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
              aws-region: ${{ inputs.aws-region }}

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build, tag, and push docker image to Amazon ECR
          env:
              registry: ${{ steps.login-ecr.outputs.registry }}
              repository: ${{ inputs.ecr-repository }}
              image_tag: ${{ inputs.ecr-image-tag }}
              dockerfile: ${{ inputs.ecr-dockerfile-name }}
          run: |
              docker buildx build --platform=linux/amd64 -t $registry/$repository:$image_tag -f $dockerfile .
              docker push $registry/$repository:$image_tag
          shell: bash
