name: Docker Deploy
description: Deploying a web server on an EC2 instance using Docker
inputs:
    image:
        required: true
    container-port:
        required: true
    container-name:
        required: true
    use-env-file:
        required: false
        default: false
    env-file-name:
        required: false
        default: .env
    ssh-host:
        required: true
    ssh-username:
        required: true
    ssh-private-key:
        required: true
    ssh-port:
        required: false
        default: 22

runs:
    using: composite
    steps:
        - name: Run Server
          uses: appleboy/ssh-action@v1.0.3
          env:
              IMAGE_NAME: ${{ inputs.image }}
              CONTAINER_PORT: ${{ inputs.container-port }}
              CONTAINER_NAME: ${{ inputs.container-name }}
              USE_ENV_FILE: ${{ inputs.use-env-file }}
              ENV_FILE_NAME: ${{ inputs.env-file-name }}
          with:
              host: ${{ inputs.ssh-host }}
              username: ${{ inputs.ssh-username }}
              key: ${{ inputs.ssh-private-key }}
              port: ${{ inputs.ssh-port }}
              envs: IMAGE_NAME,CONTAINER_PORT,CONTAINER_NAME,USE_ENV_FILE,ENV_FILE_NAME
              script_stop: true
              script: |
                  ENV_FILE_OPTION=""

                  if [ "$USE_ENV_FILE" = "true" ]; then
                    ENV_FILE_OPTION="--env-file=$ENV_FILE_NAME"
                  fi

                  CONTAINER_IDS=$(docker ps -qa)

                  if [ -n "$CONTAINER_IDS" ]; then
                    docker stop $(docker ps -aq) && docker rm $(docker ps -aq)
                  fi

                  docker pull $IMAGE_NAME \
                  && docker run -d -p 80:$CONTAINER_PORT $ENV_FILE_OPTION --name $CONTAINER_NAME $IMAGE_NAME \
                  && docker image prune -fa
